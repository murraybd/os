diff --git a/pkg/ebpf/c/tc.v4egress.bpf.c b/pkg/ebpf/c/tc.v4egress.bpf.c
index 1756c61..3df9625 100644
--- a/pkg/ebpf/c/tc.v4egress.bpf.c
+++ b/pkg/ebpf/c/tc.v4egress.bpf.c
@@ -93,7 +93,8 @@ struct bpf_map_def_pvt SEC("maps") egress_pod_state_map = {
 struct bpf_map_def_pvt aws_conntrack_map;
 struct bpf_map_def_pvt policy_events;
 
-static inline int evaluateByLookUp(struct keystruct trie_key, struct conntrack_key flow_key, struct pod_state *pst, struct data_t evt, struct iphdr *ip, __u32 l4_dst_port) {
+static inline __attribute__((always_inline))
+int evaluateByLookUp(struct keystruct trie_key, struct conntrack_key flow_key, struct pod_state *pst, struct data_t evt, struct iphdr *ip, __u32 l4_dst_port) {
 	struct lpm_trie_val *trie_val;
 	//Check if it's in the allowed list
 	trie_val = bpf_map_lookup_elem(&egress_map, &trie_key);
diff --git a/pkg/ebpf/c/tc.v4ingress.bpf.c b/pkg/ebpf/c/tc.v4ingress.bpf.c
index 3a8fd93..5bef631 100644
--- a/pkg/ebpf/c/tc.v4ingress.bpf.c
+++ b/pkg/ebpf/c/tc.v4ingress.bpf.c
@@ -93,7 +93,8 @@ struct bpf_map_def_pvt SEC("maps") ingress_pod_state_map = {
 struct bpf_map_def_pvt aws_conntrack_map;
 struct bpf_map_def_pvt policy_events;
 
-static inline int evaluateByLookUp(struct keystruct trie_key, struct conntrack_key flow_key, struct pod_state *pst, struct data_t evt, struct iphdr *ip, __u32 l4_dst_port) {
+static inline __attribute__((always_inline))
+int evaluateByLookUp(struct keystruct trie_key, struct conntrack_key flow_key, struct pod_state *pst, struct data_t evt, struct iphdr *ip, __u32 l4_dst_port) {
 	struct lpm_trie_val *trie_val;
 	//Check if it's in the allowed list
 	trie_val = bpf_map_lookup_elem(&ingress_map, &trie_key);
diff --git a/pkg/ebpf/c/tc.v6egress.bpf.c b/pkg/ebpf/c/tc.v6egress.bpf.c
index 7d36549..9bbd9cb 100644
--- a/pkg/ebpf/c/tc.v6egress.bpf.c
+++ b/pkg/ebpf/c/tc.v6egress.bpf.c
@@ -94,7 +94,8 @@ struct bpf_map_def_pvt SEC("maps") egress_pod_state_map = {
 struct bpf_map_def_pvt aws_conntrack_map;
 struct bpf_map_def_pvt policy_events;
 
-static inline int evaluateByLookUp(struct keystruct trie_key, struct conntrack_key flow_key, struct pod_state *pst, struct data_t evt, struct ipv6hdr *ip, __u32 l4_dst_port) {
+static inline __attribute__((always_inline))
+int evaluateByLookUp(struct keystruct trie_key, struct conntrack_key flow_key, struct pod_state *pst, struct data_t evt, struct ipv6hdr *ip, __u32 l4_dst_port) {
 	struct lpm_trie_val *trie_val;
 	//Check if it's in the allowed list
 	trie_val = bpf_map_lookup_elem(&egress_map, &trie_key);
diff --git a/pkg/ebpf/c/tc.v6ingress.bpf.c b/pkg/ebpf/c/tc.v6ingress.bpf.c
index b055696..71130a5 100644
--- a/pkg/ebpf/c/tc.v6ingress.bpf.c
+++ b/pkg/ebpf/c/tc.v6ingress.bpf.c
@@ -96,7 +96,8 @@ struct bpf_map_def_pvt SEC("maps") ingress_pod_state_map = {
 struct bpf_map_def_pvt aws_conntrack_map;
 struct bpf_map_def_pvt policy_events;
 
-static inline int evaluateByLookUp(struct keystruct trie_key, struct conntrack_key flow_key, struct pod_state *pst, struct data_t evt, struct ipv6hdr *ip, __u32 l4_dst_port) {
+static inline __attribute__((always_inline))
+int evaluateByLookUp(struct keystruct trie_key, struct conntrack_key flow_key, struct pod_state *pst, struct data_t evt, struct ipv6hdr *ip, __u32 l4_dst_port) {
 	struct lpm_trie_val *trie_val;
 	//Check if it's in the allowed list
 	trie_val = bpf_map_lookup_elem(&ingress_map, &trie_key);
